Network 1:

BFS:
Runtime: 0.039276897000000005 seconds
Number of nodes explored: 380
Path length: 10
Path cost: 4.5912999999999995

A*:
Runtime: 0.004256747000000005 seconds
Number of nodes explored: 51
Path length: 10
Path cost: 4.4483999999999995

IDS:
Runtime: 0.15530264800000004 seconds
Number of nodes explored: 284
Path length: 35
Path cost: 9.462800000000001


Network 2:

BFS:
Runtime: 4.542445691 seconds
Number of nodes explored: 4105
Path length: 27
Path cost: 4.499999999999999

A*:
Runtime: 0.09494432999999991 seconds
Number of nodes explored: 448
Path length: 28
Path cost: 4.2137

IDS:
Runtime: 23.279015063000003 seconds
Number of nodes explored: 1556
Path length: 140
Path cost: 14.189199999999998


Network 3:

BFS:
Runtime: 1590.1788454569999 seconds
Number of nodes explored: 39525
Path length: 80
Path cost: 6.432099999999999

A*
Runtime: 49.00801430999999 seconds
Number of nodes explored: 8689
Path length: 89
Path cost: 5.915000000000001

IDS:
Exceeded maximum recursive depth.



Based on the results above, A* was clearly the best of the three algorithms I implemented. I decided to use Euclidian distance as my heuristic because the path costs were based on distance between nodes, so the cost to get from a given node to a goal state had to be at least the distance between the node and the nearest goal. That means I used an admissable heuristic, so the algorithm should always find the optimal path. The results of running the three algorithms on the networks provided indicate that this is in fact the case. On all three networks, A* found the path with the lowest cost and furthermore did it faster and by exploring fewer nodes than BFS or IDS. There may be something wrong with my Iterative Deepening Search implementation based on how long it took on all three networks and how bad the paths it found were.


Implementing the search algorithms was surprisingly easy, the code is pretty short and not terribly complicated. Debugging was a little frustrating. Initially I tried keeping a recursive explored set for each path, which caused BFS to take so long and use so much space that my computer froze whenever I ran it. It took me some time to realize that was the problem, so I was worried about infinite loops for a little while. I also had a little bit of trouble with A*, which was returning worse paths than BFS because I forgot to add the cost of the path so far to the heuristic. As you can see by the fact that IDS exceeded maximum recursive depth on network 3, I don't think I've entirely sorted that one out.


I spent approximately 4-5 hours on this assignment.


I affirm that I have adhered to the Honor Code on this assignment.
